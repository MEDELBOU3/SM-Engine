

/********************************************************/

.node-editor {
    display: none;
    position: absolute;
    top: 41%;
    left: 48.5%;
    transform: translate(-50%, -50%);
    width: 56.9%;
    height: 70vh;
    max-height: 70vh;
    min-width: 400px;
    background: #2a2a2a;
    border: 1px solid #444;
    z-index: 1000;
    overflow: hidden;
    transition: width 0.3s ease, left 0.3s ease, transform 0.3s ease;
    resize: horizontal;
    user-select: none; 
}


#node-editor-close {
    width: 30px;
    height: 25px;
    background-color: red;
    color: #fff;
    justify-content: center;
    align-items: center;
    text-align: center;
    border: none;
    font-size: 16px;
    cursor: pointer;
}

.node-editor.expanded {
    width: 80%;
    left: 20%;
    transform: translate(0, -50%);
}

.node-editor.visible {
    display: block;
}


.node-editor-header {
    background: #1a1a1a;
    padding: 8px;
    border-bottom: 1px solid #444;
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: #fff;
    font-weight: bold;
    user-select: none;
}

.node-toolbar {
    position: absolute;
    top: 40px;
    left: 0;
    z-index: 1;
    background: #1a1a1a;
    padding: 8px;
    display: flex;
    gap: 8px;
    border-bottom: 1px solid #444;
}

.toolbar-button {
    background: #3a3a3a;
    border: 1px solid #555;
    color: #fff;
    width: 32px;
    height: 32px;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s ease;
}

.toolbar-button:hover {
    background: #4caf50;
    border-color: #4caf50;
    transform: scale(1.1);
}

.node-canvas {
    position: relative;
    width: 100%;
    height: 100vh; /* Or your desired height */
    background: #222;
    overflow: hidden;
}


/* Improved node styling */
.node {
    position: absolute;
    min-width: 120px;
    background-color: #3d3d3d;
    border: 1px solid #555;
    border-radius: 8px;
    padding: 0; /* Remove padding, control with inner elements */
    box-shadow: 3px 3px 10px rgba(0,0,0,0.3);
    cursor: default; /* Default for node, changes on header for drag */
    transition: box-shadow 0.2s ease-out;
    user-select: none;
    z-index: 10;
}

.node.selected {
    border: 1px solid #0af;
    box-shadow: 0 0 8px rgba(0, 170, 255, 0.5);
}
        
        
svg {
    z-index: 12; /* Connections above nodes and grid */
}

.node:hover {
    border-color: #4caf50;
    transform: translateY(-3px);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.4);
}

.node-title {
    background: linear-gradient(90deg, #444, #383838);
    padding: 4px 6px;
    font-weight: bold;
    font-size: 1em;
    color: #fff;
}

.node-content {
    padding: 10px;
    display: flex;
    flex-direction: column;
    gap: 8px; /* Space between properties */
}

.node-socket {
    width: 14px;
    height: 14px;
    background-color: #666;
    border: 1px solid #888;
    border-radius: 50%;
    position: absolute;
    cursor: crosshair;
    transition: background-color 0.2s, transform 0.1s;
}
.node-socket.input {
    left: -7px; /* Center on edge */
    top: 50%; /* Placeholder, position dynamically or with flex */
    transform: translateY(-50%);
    background-color: #00aeff; /* Blue for input */
}
.node-socket.output {
    right: -7px; /* Center on edge */
    top: 50%; /* Placeholder */
    transform: translateY(-50%);
    background-color: #ff8c00; /* Orange for output */
}

.node-socket.hover {
    background-color: #fff;
    transform: translateY(-50%) scale(1.2);
}

.node-socket:hover,
.node-socket.active {
    transform: scale(1.2);
    background: #4caf50;
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

.toolbar-button[data-type="effect"] {
    animation: pulse 2s infinite;
    background-color: #2a5d8a;
}

.toolbar-button[data-type="effect"]:hover {
    background-color: #3a6d9a;
    animation: none;
}

/* Water effect specific styles */
.node-property[data-show-when="type=Water"] {
    border-left: 2px solid #0088ff;
    padding-left: 5px;
    margin-left: -5px;
}

.node-property {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.9em;
}

.node-property:hover {
    background: #404040;
    transform: translateX(2px);
}

.node-socket.property-socket {
    margin-right: 6px;
}

.node-socket.property-socket:hover,
.node-socket.property-socket.active {
    transform: scale(1.2);
    background: #4caf50;
}

.node-property label {
    margin-right: 8px;
    color: #ccc;
    white-space: nowrap;
}

/* When input is focused, highlight the label */
.node-property input:focus + label,
.node-property select:focus + label {
    color: #4caf50;
}

.node-connection {
    transition: stroke 0.1s ease-out;
    position: absolute;
    pointer-events: none;
    z-index: -1;
}

.node-connection.selected {
    stroke: #00ccff !important; /* Override JS for selected connections if needed */
    /* filter: drop-shadow(0 0 3px #00ccff); */ /* Can be performance intensive */
}

/* Dynamic positioning for sockets if content height varies */
/* This would be better handled by JS calculating positions or using flex layout */
.node-content + .node-socket.output,
.node-header + .node-socket.input { /* If sockets are direct children after header/content */
    /* Adjust top based on content, or use JS */
}


/* Example for specific property spacing (e.g., vector3) */
.node-property .vector3-input input {
    width: calc(33% - 3px); /* Distribute width in vector3 */
}

.node-property input,
.node-property select {
    background: #4a4a4a;
    border: 1px solid #606060;
    color: #fff;
    padding: 5px;
    border-radius: 3px;
    width: 80px;
    font-size: 0.9em;
    transition: all 0.2s ease;
}

.node-property input:focus,
.node-property select:focus {
    outline: none;
    border-color: #4caf50;
    box-shadow: 0 0 4px rgba(76, 175, 80, 0.3);
}

:root {
            --node-bg: #3a3a3a;
            --node-border: #2a2a2a;
            --node-title-bg: #4a4a4a;
            --node-text-color: #f0f0f0;
            --node-socket-color: #616161;
            --node-socket-hover-color: #757575;
            --node-socket-valid-target-color: #4CAF50;
            --node-socket-connected-color: #03A9F4;
            --node-input-bg: #2c2c2c;
            --node-input-border: #555;
            --node-input-text: #e0e0e0;

            --node-grid-line-color: #383838;
            --node-grid-subdivision-color: #2e2e2e;
            --node-grid-accent-color: #4a4a4a;
            --node-grid-origin-x-color: #E91E63;
            --node-grid-origin-y-color: #4CAF50;

            --node-connection-color: #9e9e9e;
            --node-connection-hover-color: #03A9F4;
            --node-connection-selected-color: #FFC107;
            --node-connection-temp-color: #00bcd4;
            --node-connection-arrow-size: 8px;

            --font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
        }

        /* Your toolbar styles for the toggle button */

        .node-editor-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 15px;
            background-color: #333;
            border-bottom: 1px solid #1e1e1e;
            cursor: move; /* Allow dragging the header to move editor (optional) */
            flex-shrink: 0;
        }
        .node-editor-header span {
            font-weight: bold;
        }
        #node-editor-close {
            background: none;
            border: none;
            color: #aaa;
            font-size: 20px;
            cursor: pointer;
        }
        #node-editor-close:hover {
            color: white;
        }

        .node-toolbar {
            display: flex;
            padding: 8px;
            background-color: #2f2f2f;
            border-bottom: 1px solid #1e1e1e;
            gap: 8px;
            flex-wrap: wrap; /* Allow buttons to wrap */
            flex-shrink: 0;
            overflow-x: auto; /* Scroll if too many buttons */
        }
        .node-toolbar .toolbar-button { /* Target buttons inside node-toolbar */
            background-color: var(--node-input-bg);
            color: var(--node-text-color);
            border: 1px solid var(--node-input-border);
            padding: 6px 10px;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 12px;
        }
        .node-toolbar .toolbar-button:hover {
            background-color: #444;
        }
        .node-toolbar .toolbar-button svg {
            width: 18px; /* Adjust SVG size */
            height: 18px;
        }
        .node-toolbar .toolbar-button svg path {
             stroke: var(--node-text-color); /* Ensure SVGs use theme color */
        }


        .node-canvas { /* This is the ID used by NodeEditor constructor */
            flex-grow: 1; /* Takes remaining space in .node-editor */
            position: relative;
            overflow: hidden;
            background-color: #252525;
            cursor: grab;
        }
        .node-canvas:active { /* When panning */
            cursor: grabbing;
        }

        /* Node Styles (from previous response, ensure they are here) */
        .node {
            position: absolute;
            background-color: var(--node-bg);
            border: 1px solid var(--node-border);
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.3);
            color: var(--node-text-color);
            min-width: 200px; /* Slightly wider for more content */
            user-select: none;
            display: flex;
            flex-direction: column;
            font-size: 13px;
            transition: box-shadow 0.2s ease, border-color 0.2s ease; /* Smooth selection */
        }
        .node.selected {
            border-color: var(--node-connection-selected-color);
            box-shadow: 0 0 0 2px var(--node-connection-selected-color), 0 4px 15px rgba(0,0,0,0.4);
        }

        .node-title {
            background-color: var(--node-title-bg);
            padding: 10px 15px; /* More padding */
            font-weight: 600; /* Bolder */
            border-top-left-radius: 7px;
            border-top-right-radius: 7px;
            cursor: move;
            text-align: center;
            border-bottom: 1px solid var(--node-border);
            font-size: 14px;
        }

        .node-content {
            padding: 12px 15px; /* More padding */
            display: flex;
            flex-direction: column;
            gap: 10px; /* Increased gap */
        }

        .node-property {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 10px;
        }
        .node-property label {
            white-space: nowrap;
            color: #ccc;
            flex-shrink: 0; /* Prevent label from shrinking too much */
        }
        .node-property input[type="text"],
        .node-property input[type="number"],
        .node-property select {
            background-color: var(--node-input-bg);
            border: 1px solid var(--node-input-border);
            color: var(--node-input-text);
            padding: 7px 10px; /* Increased padding */
            border-radius: 4px;
            flex-grow: 1; /* Allow input to take available space */
            box-sizing: border-box;
            font-size: 13px; /* Slightly larger */
            min-width: 50px; /* Prevent extreme shrinking */
        }
        .node-property input[type="number"] {
             /* width: auto; Let flexbox handle, but set a min-width */
        }
        .node-property input[type="color"] {
            padding: 0;
            height: 30px; /* Match other inputs */
            width: 45px;
            border-radius: 4px;
            background-color: var(--node-input-bg);
            border: 1px solid var(--node-input-border);
            cursor: pointer;
        }
        .node-property input[type="range"] {
            flex-grow: 1;
            accent-color: var(--node-connection-temp-color);
            margin: 0 5px; /* Add some margin for range */
        }
        .node-property .value-display {
            min-width: 35px; /* Wider for values */
            text-align: right;
            font-size: 12px;
            color: #aaa;
        }
        .vector3-input-group {
            display: flex;
            gap: 5px;
            flex-grow: 1;
        }
        .vector3-input-group input[type="number"]{
            width: 100%; /* Each takes 1/3 of available flex space */
            text-align: center;
        }
        .node-property input[type="checkbox"] {
            width: 18px;
            height: 18px;
            accent-color: var(--node-connection-temp-color);
        }


        .node-socket {
            width: 14px; /* Slightly larger */
            height: 14px;
            background-color: var(--node-socket-color);
            border: 1.5px solid #222; /* Thicker border */
            border-radius: 50%;
            position: absolute;
            cursor: crosshair;
            transition: background-color 0.15s ease, transform 0.15s ease, box-shadow 0.15s ease;
            z-index: 1; /* Above node body slightly */
        }
        .node-socket:hover {
            background-color: var(--node-socket-hover-color);
            transform: translateY(-50%) scale(1.25); /* Maintain Y centering */
            box-shadow: 0 0 5px rgba(200,200,200,0.3);
        }
        .node-socket.input {
            left: -8px; /* Adjusted for larger size */
            /* top: 50%; default, overridden by specific placement below */
            /* transform: translateY(-50%); */
        }
        .node-socket.output {
            right: -8px;
            /* top: 50%; */
            /* transform: translateY(-50%); */
        }

        /* Dynamic socket placement based on number of sockets (example) */
        /* You'll need JS to add these classes or adjust styles if socket count changes */
        .node-socket.socket-pos-1 { top: 30%; transform: translateY(-50%) scale(1);}
        .node-socket.socket-pos-2 { top: 50%; transform: translateY(-50%) scale(1);}
        .node-socket.socket-pos-3 { top: 70%; transform: translateY(-50%) scale(1);}
        /* More specific for first input relative to title if needed */
        /* .node-title + .node-socket.input { top: 35px; } */


        .node-socket.valid-target {
            background-color: var(--node-socket-valid-target-color);
            box-shadow: 0 0 8px var(--node-socket-valid-target-color);
            transform: translateY(-50%) scale(1.3) !important;
        }
         .node-socket.connected {
            background-color: var(--node-socket-connected-color);
            border-color: #0277BD;
        }


        /* Connection SVG Styles */
        .node-connection-line {
            transition: stroke 0.1s ease;
        }
        .node-connection-line.hovered {
            stroke-width: calc(var(--stroke-width, 2.5) * 1.2 / var(--scale, 1)) !important; /* Use JS vars for dynamic stroke */
        }
        .node-connection-arrow {
            transition: fill 0.1s ease;
        }

       
